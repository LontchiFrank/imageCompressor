{"ast":null,"code":"var _jsxFileName = \"/home/fodjo/Desktop/imageCompress/src/pages/Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Grid, Image, Item, Button } from \"semantic-ui-react\";\nimport imageCompression from \"browser-image-compression\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload() {\n  _s();\n\n  const [origImage, setOrigImage] = useState(\"\");\n  const [origImageFile, setOrigImageFile] = useState(\"\");\n  const [compressedImage, setCompressedImage] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\"); //   const [origImage, setOrigImage] = useState(\"\");\n  //   const [origImageFile, setOrigImageFile] = useState(\"\");\n  //   const [compressedImage, setCompressedImage] = useState(\"\");\n  //   const [fileName, setFileName] = useState(\"\");\n\n  const handle = e => {\n    const imageFile = e.target.files[0];\n    setOrigImage(imageFile);\n    setOrigImageFile(URL.createObjectURL(imageFile));\n    setFileName(imageFile.name);\n  };\n\n  const handleCompressImage = e => {\n    e.preventDefault();\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 500,\n      useWebWorker: true\n    };\n\n    if (options.maxSizeMB >= origImage / 1024) {\n      alert(\"Image is too small, cant be compressed\");\n      return 0;\n    }\n\n    let output;\n    imageCompression(origImage, options).then(x => {\n      output = x;\n      const downloadLink = URL.createObjectURL(output);\n      setCompressedImage(downloadLink);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classsName: \"App\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: origImageFile ? /*#__PURE__*/_jsxDEV(Image, {\n              src: origImageFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Image, {\n              style: {\n                width: \"400px\",\n                height: \"300px\"\n              },\n              src: \"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          className: \"d-flex justify-content-center align-items-center flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            className: \"mt-2 btn btn-dark w-75\",\n            onChange: e => handle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), origImageFile && /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: e => {\n              handleCompressImage(e);\n            },\n            children: [\" \", \"Compress Image\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), compressedImage && /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: compressedImage,\n              download: fileName,\n              children: [\" \", \"Download Image\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: compressedImage ? /*#__PURE__*/_jsxDEV(Image, {\n              src: compressedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Image, {\n              src: \"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"XQX0xl+VK8PaKJIczEMKvtuRxi0=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/fodjo/Desktop/imageCompress/src/pages/Upload.jsx"],"names":["React","useState","Container","Grid","Image","Item","Button","imageCompression","Upload","origImage","setOrigImage","origImageFile","setOrigImageFile","compressedImage","setCompressedImage","fileName","setFileName","handle","e","imageFile","target","files","URL","createObjectURL","name","handleCompressImage","preventDefault","options","maxSizeMB","maxWidthOrHeight","useWebWorker","alert","output","then","x","downloadLink","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Grid, Image, Item, Button } from \"semantic-ui-react\";\nimport imageCompression from \"browser-image-compression\";\nfunction Upload() {\n  const [origImage, setOrigImage] = useState(\"\");\n\n  const [origImageFile, setOrigImageFile] = useState(\"\");\n\n  const [compressedImage, setCompressedImage] = useState(\"\");\n\n  const [fileName, setFileName] = useState(\"\");\n\n  //   const [origImage, setOrigImage] = useState(\"\");\n\n  //   const [origImageFile, setOrigImageFile] = useState(\"\");\n\n  //   const [compressedImage, setCompressedImage] = useState(\"\");\n\n  //   const [fileName, setFileName] = useState(\"\");\n\n  const handle = (e) => {\n    const imageFile = e.target.files[0];\n\n    setOrigImage(imageFile);\n\n    setOrigImageFile(URL.createObjectURL(imageFile));\n\n    setFileName(imageFile.name);\n  };\n\n  const handleCompressImage = (e) => {\n    e.preventDefault();\n\n    const options = {\n      maxSizeMB: 1,\n\n      maxWidthOrHeight: 500,\n\n      useWebWorker: true,\n    };\n\n    if (options.maxSizeMB >= origImage / 1024) {\n      alert(\"Image is too small, cant be compressed\");\n\n      return 0;\n    }\n\n    let output;\n\n    imageCompression(origImage, options).then((x) => {\n      output = x;\n\n      const downloadLink = URL.createObjectURL(output);\n\n      setCompressedImage(downloadLink);\n    });\n  };\n\n  return (\n    <div classsName=\"App\">\n      {\" \"}\n      <h1></h1>\n      <Container>\n        <Grid className=\"d-flex\">\n          <Grid.Column width={6}>\n            <Item>\n              {origImageFile ? (\n                <Image src={origImageFile}></Image>\n              ) : (\n                <Image\n                  style={{ width: \"400px\", height: \"300px\" }}\n                  src=\"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"\n                ></Image>\n              )}\n            </Item>\n          </Grid.Column>\n\n          <Grid.Column\n            width={4}\n            className=\"d-flex justify-content-center align-items-center flex-column\"\n          >\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              className=\"mt-2 btn btn-dark w-75\"\n              onChange={(e) => handle(e)}\n            />\n\n            <h1></h1>\n\n            {origImageFile && (\n              <Button\n                primary\n                onClick={(e) => {\n                  handleCompressImage(e);\n                }}\n              >\n                {\" \"}\n                Compress Image\n              </Button>\n            )}\n\n            <h1></h1>\n\n            {compressedImage && (\n              <Button>\n                <a href={compressedImage} download={fileName}>\n                  {\" \"}\n                  Download Image\n                </a>\n              </Button>\n            )}\n          </Grid.Column>\n\n          <Grid.Column width={6}>\n            <Item>\n              {compressedImage ? (\n                <Image src={compressedImage}></Image>\n              ) : (\n                <Image src=\"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"></Image>\n              )}\n            </Item>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}