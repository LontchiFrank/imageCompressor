{"ast":null,"code":"var _jsxFileName = \"/home/fodjo/Desktop/imageCompress/src/pages/Home.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TodoCard from \"../components/TodoCard.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  title: \"\"\n}];\n\nfunction Home() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    // This will run when the component has mounted\n    // Fetch todos from the external url (api)\n    let url = \"https://jsonplaceholder.typicode.com/todos\";\n    fetch(url).then(res => res.json()).then(responseJson => setTodos(responseJson));\n  }, []); // Component did mount\n\n  useEffect(() => {\n    if (todos.length) {\n      alert(\"Please help out\");\n    }\n  }, [todos]); // Listen to todos, in case anything changes\n\n  const deleteTodo = id => {\n    let newTodos = todos.filter(todo => {\n      if (todo.id == id) {\n        return false;\n      }\n\n      return true;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Welcome to my todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoCard, {\n      onDelete: deleteTodo,\n      onDelete: id => deleteTodo(id),\n      title: todo.title,\n      id: todo.id,\n      completed: todo.completed\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/fodjo/Desktop/imageCompress/src/pages/Home.page.jsx"],"names":["React","useState","useEffect","TodoCard","data","title","Home","todos","setTodos","url","fetch","then","res","json","responseJson","length","alert","deleteTodo","id","newTodos","filter","todo","map","index","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,CAAb;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA;AACA,QAAIO,GAAG,GAAG,4CAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,YAAD,IAAkBN,QAAQ,CAACM,YAAD,CAFlC;AAGD,GARQ,EAQN,EARM,CAAT,CAHc,CAWN;;AAERZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACQ,MAAV,EAAkB;AAChBC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACT,KAAD,CAJM,CAAT,CAbc,CAiBD;;AAEb,QAAMU,UAAU,GAAIC,EAAD,IAAQ;AACzB,QAAIC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAU;AACpC,UAAIA,IAAI,CAACH,EAAL,IAAWA,EAAf,EAAmB;AACjB,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KALc,CAAf;AAMAV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,KAAK,CAACe,GAAN,CAAU,CAACD,IAAD,EAAOE,KAAP,kBACT,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEN,UADZ;AAEE,MAAA,QAAQ,EAAGC,EAAD,IAAQD,UAAU,CAACC,EAAD,CAF9B;AAIE,MAAA,KAAK,EAAEG,IAAI,CAAChB,KAJd;AAKE,MAAA,EAAE,EAAEgB,IAAI,CAACH,EALX;AAME,MAAA,SAAS,EAAEG,IAAI,CAACG;AANlB,OAGOD,KAHP;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5CQjB,I;;KAAAA,I;AA8CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoCard from \"../components/TodoCard.component\";\n\nconst data = [{ title: \"\" }];\n\nfunction Home() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // This will run when the component has mounted\n\n    // Fetch todos from the external url (api)\n    let url = \"https://jsonplaceholder.typicode.com/todos\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((responseJson) => setTodos(responseJson));\n  }, []); // Component did mount\n\n  useEffect(() => {\n    if (todos.length) {\n      alert(\"Please help out\");\n    }\n  }, [todos]); // Listen to todos, in case anything changes\n\n  const deleteTodo = (id) => {\n    let newTodos = todos.filter((todo) => {\n      if (todo.id == id) {\n        return false;\n      }\n      return true;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"container-fluid p-5\">\n      <h1 className=\"text-center\">Welcome to my todo list</h1>\n      {todos.map((todo, index) => (\n        <TodoCard\n          onDelete={deleteTodo}\n          onDelete={(id) => deleteTodo(id)}\n          key={index}\n          title={todo.title}\n          id={todo.id}\n          completed={todo.completed}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}